// Code generated by go-swagger; DO NOT EDIT.

package champion_mastery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/andresperezl/gol/models"
)

// GetChampionMasteryOKCode is the HTTP code returned for type GetChampionMasteryOK
const GetChampionMasteryOKCode int = 200

/*GetChampionMasteryOK OK

swagger:response getChampionMasteryOK
*/
type GetChampionMasteryOK struct {

	/*
	  In: Body
	*/
	Payload *models.ChampionMastery `json:"body,omitempty"`
}

// NewGetChampionMasteryOK creates GetChampionMasteryOK with default headers values
func NewGetChampionMasteryOK() *GetChampionMasteryOK {

	return &GetChampionMasteryOK{}
}

// WithPayload adds the payload to the get champion mastery o k response
func (o *GetChampionMasteryOK) WithPayload(payload *models.ChampionMastery) *GetChampionMasteryOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery o k response
func (o *GetChampionMasteryOK) SetPayload(payload *models.ChampionMastery) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryBadRequestCode is the HTTP code returned for type GetChampionMasteryBadRequest
const GetChampionMasteryBadRequestCode int = 400

/*GetChampionMasteryBadRequest Bad request

swagger:response getChampionMasteryBadRequest
*/
type GetChampionMasteryBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryBadRequest creates GetChampionMasteryBadRequest with default headers values
func NewGetChampionMasteryBadRequest() *GetChampionMasteryBadRequest {

	return &GetChampionMasteryBadRequest{}
}

// WithPayload adds the payload to the get champion mastery bad request response
func (o *GetChampionMasteryBadRequest) WithPayload(payload *models.Error) *GetChampionMasteryBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery bad request response
func (o *GetChampionMasteryBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryUnauthorizedCode is the HTTP code returned for type GetChampionMasteryUnauthorized
const GetChampionMasteryUnauthorizedCode int = 401

/*GetChampionMasteryUnauthorized Unauthorized

swagger:response getChampionMasteryUnauthorized
*/
type GetChampionMasteryUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryUnauthorized creates GetChampionMasteryUnauthorized with default headers values
func NewGetChampionMasteryUnauthorized() *GetChampionMasteryUnauthorized {

	return &GetChampionMasteryUnauthorized{}
}

// WithPayload adds the payload to the get champion mastery unauthorized response
func (o *GetChampionMasteryUnauthorized) WithPayload(payload *models.Error) *GetChampionMasteryUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery unauthorized response
func (o *GetChampionMasteryUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryForbiddenCode is the HTTP code returned for type GetChampionMasteryForbidden
const GetChampionMasteryForbiddenCode int = 403

/*GetChampionMasteryForbidden Forbidden

swagger:response getChampionMasteryForbidden
*/
type GetChampionMasteryForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryForbidden creates GetChampionMasteryForbidden with default headers values
func NewGetChampionMasteryForbidden() *GetChampionMasteryForbidden {

	return &GetChampionMasteryForbidden{}
}

// WithPayload adds the payload to the get champion mastery forbidden response
func (o *GetChampionMasteryForbidden) WithPayload(payload *models.Error) *GetChampionMasteryForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery forbidden response
func (o *GetChampionMasteryForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryNotFoundCode is the HTTP code returned for type GetChampionMasteryNotFound
const GetChampionMasteryNotFoundCode int = 404

/*GetChampionMasteryNotFound Not found

swagger:response getChampionMasteryNotFound
*/
type GetChampionMasteryNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryNotFound creates GetChampionMasteryNotFound with default headers values
func NewGetChampionMasteryNotFound() *GetChampionMasteryNotFound {

	return &GetChampionMasteryNotFound{}
}

// WithPayload adds the payload to the get champion mastery not found response
func (o *GetChampionMasteryNotFound) WithPayload(payload *models.Error) *GetChampionMasteryNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery not found response
func (o *GetChampionMasteryNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryMethodNotAllowedCode is the HTTP code returned for type GetChampionMasteryMethodNotAllowed
const GetChampionMasteryMethodNotAllowedCode int = 405

/*GetChampionMasteryMethodNotAllowed Method not allowed

swagger:response getChampionMasteryMethodNotAllowed
*/
type GetChampionMasteryMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryMethodNotAllowed creates GetChampionMasteryMethodNotAllowed with default headers values
func NewGetChampionMasteryMethodNotAllowed() *GetChampionMasteryMethodNotAllowed {

	return &GetChampionMasteryMethodNotAllowed{}
}

// WithPayload adds the payload to the get champion mastery method not allowed response
func (o *GetChampionMasteryMethodNotAllowed) WithPayload(payload *models.Error) *GetChampionMasteryMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery method not allowed response
func (o *GetChampionMasteryMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryUnsupportedMediaTypeCode is the HTTP code returned for type GetChampionMasteryUnsupportedMediaType
const GetChampionMasteryUnsupportedMediaTypeCode int = 415

/*GetChampionMasteryUnsupportedMediaType Unsopported media type

swagger:response getChampionMasteryUnsupportedMediaType
*/
type GetChampionMasteryUnsupportedMediaType struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryUnsupportedMediaType creates GetChampionMasteryUnsupportedMediaType with default headers values
func NewGetChampionMasteryUnsupportedMediaType() *GetChampionMasteryUnsupportedMediaType {

	return &GetChampionMasteryUnsupportedMediaType{}
}

// WithPayload adds the payload to the get champion mastery unsupported media type response
func (o *GetChampionMasteryUnsupportedMediaType) WithPayload(payload *models.Error) *GetChampionMasteryUnsupportedMediaType {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery unsupported media type response
func (o *GetChampionMasteryUnsupportedMediaType) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryUnsupportedMediaType) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(415)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryTooManyRequestsCode is the HTTP code returned for type GetChampionMasteryTooManyRequests
const GetChampionMasteryTooManyRequestsCode int = 429

/*GetChampionMasteryTooManyRequests Rate limit Exceeded

swagger:response getChampionMasteryTooManyRequests
*/
type GetChampionMasteryTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryTooManyRequests creates GetChampionMasteryTooManyRequests with default headers values
func NewGetChampionMasteryTooManyRequests() *GetChampionMasteryTooManyRequests {

	return &GetChampionMasteryTooManyRequests{}
}

// WithPayload adds the payload to the get champion mastery too many requests response
func (o *GetChampionMasteryTooManyRequests) WithPayload(payload *models.Error) *GetChampionMasteryTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery too many requests response
func (o *GetChampionMasteryTooManyRequests) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryInternalServerErrorCode is the HTTP code returned for type GetChampionMasteryInternalServerError
const GetChampionMasteryInternalServerErrorCode int = 500

/*GetChampionMasteryInternalServerError Internal server error

swagger:response getChampionMasteryInternalServerError
*/
type GetChampionMasteryInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryInternalServerError creates GetChampionMasteryInternalServerError with default headers values
func NewGetChampionMasteryInternalServerError() *GetChampionMasteryInternalServerError {

	return &GetChampionMasteryInternalServerError{}
}

// WithPayload adds the payload to the get champion mastery internal server error response
func (o *GetChampionMasteryInternalServerError) WithPayload(payload *models.Error) *GetChampionMasteryInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery internal server error response
func (o *GetChampionMasteryInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryBadGatewayCode is the HTTP code returned for type GetChampionMasteryBadGateway
const GetChampionMasteryBadGatewayCode int = 502

/*GetChampionMasteryBadGateway Bad gateway

swagger:response getChampionMasteryBadGateway
*/
type GetChampionMasteryBadGateway struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryBadGateway creates GetChampionMasteryBadGateway with default headers values
func NewGetChampionMasteryBadGateway() *GetChampionMasteryBadGateway {

	return &GetChampionMasteryBadGateway{}
}

// WithPayload adds the payload to the get champion mastery bad gateway response
func (o *GetChampionMasteryBadGateway) WithPayload(payload *models.Error) *GetChampionMasteryBadGateway {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery bad gateway response
func (o *GetChampionMasteryBadGateway) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(502)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryServiceUnavailableCode is the HTTP code returned for type GetChampionMasteryServiceUnavailable
const GetChampionMasteryServiceUnavailableCode int = 503

/*GetChampionMasteryServiceUnavailable Service Unavailable

swagger:response getChampionMasteryServiceUnavailable
*/
type GetChampionMasteryServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryServiceUnavailable creates GetChampionMasteryServiceUnavailable with default headers values
func NewGetChampionMasteryServiceUnavailable() *GetChampionMasteryServiceUnavailable {

	return &GetChampionMasteryServiceUnavailable{}
}

// WithPayload adds the payload to the get champion mastery service unavailable response
func (o *GetChampionMasteryServiceUnavailable) WithPayload(payload *models.Error) *GetChampionMasteryServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery service unavailable response
func (o *GetChampionMasteryServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetChampionMasteryGatewayTimeoutCode is the HTTP code returned for type GetChampionMasteryGatewayTimeout
const GetChampionMasteryGatewayTimeoutCode int = 504

/*GetChampionMasteryGatewayTimeout Gateway timeout

swagger:response getChampionMasteryGatewayTimeout
*/
type GetChampionMasteryGatewayTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetChampionMasteryGatewayTimeout creates GetChampionMasteryGatewayTimeout with default headers values
func NewGetChampionMasteryGatewayTimeout() *GetChampionMasteryGatewayTimeout {

	return &GetChampionMasteryGatewayTimeout{}
}

// WithPayload adds the payload to the get champion mastery gateway timeout response
func (o *GetChampionMasteryGatewayTimeout) WithPayload(payload *models.Error) *GetChampionMasteryGatewayTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get champion mastery gateway timeout response
func (o *GetChampionMasteryGatewayTimeout) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetChampionMasteryGatewayTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(504)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
