---
swagger: '2.0'
info:
  title: 'League of Legends API'
  version: 'v4'
  termsOfService: 'https://developer.riotgames.com/terms'
basePath: '/lol'
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  '/champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}':
    get:
      tags:
      - championMastery
      summary: 'Get all champion mastery entries sorted by number of champion points descending'
      externalDocs:
        url: 'https://developer.riotgames.com/apis#champion-mastery-v4/GET_getAllChampionMasteries'
      operationId: getAllChampionMasteries
      parameters:
      - '$ref': '#/parameters/encryptedSummonerId'
      responses:
        200:
          description: 'OK'
          schema:
            type: array
            readOnly: true
            items:
              '$ref': '#/definitions/ChampionMastery'
        400:
          '$ref': '#/responses/BadRequest'
        401:
          '$ref': '#/responses/Unauthorized'
        403:
          '$ref': '#/responses/Forbidden'
        404:
          '$ref': '#/responses/NotFound'
        405:
          '$ref': '#/responses/MethodNotAllowed'
        415:
          '$ref': '#/responses/UnsopportedMediaType'
        429:
          '$ref': '#/responses/RateLimitExceeded'
        500:
          '$ref': '#/responses/IntenalServerError'
        502:
          '$ref': '#/responses/BadGateway'
        503:
          '$ref': '#/responses/ServiceUnavailable'
        504:
          '$ref': '#/responses/GatewayTimeout'
  '/champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}':
    get:
      tags:
      - championMastery
      summary: 'Get a champion mastery by player ID and champion ID'
      externalDocs:
        url: 'https://developer.riotgames.com/apis#champion-mastery-v4/GET_getChampionMastery'
      operationId: getChampionMastery
      parameters:
      - '$ref': '#/parameters/encryptedSummonerId'
      - '$ref': '#/parameters/championId'
      responses:
        200:
          description: 'OK'
          schema:
            '$ref': '#/definitions/ChampionMastery'
        400:
          '$ref': '#/responses/BadRequest'
        401:
          '$ref': '#/responses/Unauthorized'
        403:
          '$ref': '#/responses/Forbidden'
        404:
          '$ref': '#/responses/NotFound'
        405:
          '$ref': '#/responses/MethodNotAllowed'
        415:
          '$ref': '#/responses/UnsopportedMediaType'
        429:
          '$ref': '#/responses/RateLimitExceeded'
        500:
          '$ref': '#/responses/IntenalServerError'
        502:
          '$ref': '#/responses/BadGateway'
        503:
          '$ref': '#/responses/ServiceUnavailable'
        504:
          '$ref': '#/responses/GatewayTimeout'
  '/champion-mastery/v4/scores/by-summoner/{encryptedSummonerId}':
    get:
      tags:
      - championMastery
      summary: 'Get a champion mastery by player ID and champion ID'
      externalDocs:
        url: 'https://developer.riotgames.com/apis#champion-mastery-v4/GET_getChampionMasteryScore'
      operationId: getChampionMasteryScore
      parameters:
      - '$ref': '#/parameters/encryptedSummonerId'
      responses:
        200:
          description: 'OK'
          schema:
            type: integer
            format: int32
        400:
          '$ref': '#/responses/BadRequest'
        401:
          '$ref': '#/responses/Unauthorized'
        403:
          '$ref': '#/responses/Forbidden'
        404:
          '$ref': '#/responses/NotFound'
        405:
          '$ref': '#/responses/MethodNotAllowed'
        415:
          '$ref': '#/responses/UnsopportedMediaType'
        429:
          '$ref': '#/responses/RateLimitExceeded'
        500:
          '$ref': '#/responses/IntenalServerError'
        502:
          '$ref': '#/responses/BadGateway'
        503:
          '$ref': '#/responses/ServiceUnavailable'
        504:
          '$ref': '#/responses/GatewayTimeout'
  '/platform/v3/champion-rotations':
    get:
      tags:
      - champion
      summary: 'Returns champion rotations, including free-to-play and low-level free-to-play rotations'
      externalDocs:
        url: 'https://developer.riotgames.com/apis#champion-v3/GET_getChampionInfo'
      operationId: getChampionInfo
      responses:
        200:
          description: 'OK'
          schema:
            '$ref': '#/definitions/ChampionInfo'
        400:
          '$ref': '#/responses/BadRequest'
        401:
          '$ref': '#/responses/Unauthorized'
        403:
          '$ref': '#/responses/Forbidden'
        404:
          '$ref': '#/responses/NotFound'
        405:
          '$ref': '#/responses/MethodNotAllowed'
        415:
          '$ref': '#/responses/UnsopportedMediaType'
        429:
          '$ref': '#/responses/RateLimitExceeded'
        500:
          '$ref': '#/responses/IntenalServerError'
        502:
          '$ref': '#/responses/BadGateway'
        503:
          '$ref': '#/responses/ServiceUnavailable'
        504:
          '$ref': '#/responses/GatewayTimeout'
  '/lol/league-exp/v4/entries/{queue}/{tier}/{division}':
    get:
      tags:
      - league
      - experimental
      summary: 'Get all the league entries.'
      description: >-
        At the request of a GitHub issue, we've added an experimental
        league-exp-v4 endpoint. This new endpoint is a duplicate of the endpoint
        in league-v4, but it also supports the apex tiers (Challenger,
        Grandmaster, and Master). In November we'll evaluate whether
        this endpoint delivers enough value to merit its continual support.
      externalDocs:
        url: 'https://developer.riotgames.com/apis#league-exp-v4/GET_getLeagueEntries'
      operationId: getLeagueEntriesExp
      parameters:
      - '$ref': '#/parameters/queue'
      - '$ref': '#/parameters/tierExp'
      - '$ref': '#/parameters/division'
      - '$ref': '#/parameters/page'
      responses:
        200:
          description: 'OK'
          schema:
            type: array
            readOnly: true
            items:
              '$ref': '#/definitions/LeagueEntry'
        400:
          '$ref': '#/responses/BadRequest'
        401:
          '$ref': '#/responses/Unauthorized'
        403:
          '$ref': '#/responses/Forbidden'
        404:
          '$ref': '#/responses/NotFound'
        405:
          '$ref': '#/responses/MethodNotAllowed'
        415:
          '$ref': '#/responses/UnsopportedMediaType'
        429:
          '$ref': '#/responses/RateLimitExceeded'
        500:
          '$ref': '#/responses/IntenalServerError'
        502:
          '$ref': '#/responses/BadGateway'
        503:
          '$ref': '#/responses/ServiceUnavailable'
        504:
          '$ref': '#/responses/GatewayTimeout'
definitions:
  APIError:
    type: object
    readOnly: true
    properties:
      status:
        '$ref': '#/definitions/Status'
  Status:
    type: object
    readOnly: true
    properties:
      message:
        type: string
        readOnly: true
      status_code:
        type: integer
        readOnly: true
        format: int32
  ChampionMastery:
    type: object
    readOnly: true
    description: ' Contains single Champion Mastery information for player and champion combination'
    properties:
      chestGranted:
        type: boolean
        readOnly: true
        description: 'Is chest granted for this champion or not in current season'
      championLevel:
        type: integer
        readOnly: true
        format: int32
        description: 'Champion level for specified player and champion combination'
      championPoints:
        type: integer
        readOnly: true
        format: int32
        description: 'Total number of champion points for this player and champion combination - they are used to determine championLevel'
      championId:
        type: integer
        readOnly: true
        format: int64
        description: 'Champion ID'
      championPointsUntilNextLevel:
        type: integer
        readOnly: true
        format: int64
        description: 'Number of points needed to achieve next level. Zero if player reached maximum champion level for this champion'
      lastPlayTime:
        type: integer
        readOnly: true
        format: int64
        description: 'Last time this champion was played by this player - in Unix milliseconds time format'
      tokensEarned:
        type: integer
        readOnly: true
        format: int32
        description: 'The token earned for this champion to levelup'
      championPointsSinceLastLevel:
        type: integer
        readOnly: true
        format: int64
        description: 'Number of points earned since current level has been achieved'
      summonerId:
        type: string
        readOnly: true
        description: 'Summoner ID (Encrypted)'
  ChampionInfo:
    type: object
    properties:
      freeChampionIdsForNewPlayers:
        type: array
        items:
          type: integer
          format: int32
      freeChampionIds:
        type: array
        items:
          type: integer
          format: int32
      maxNewPlayerLevel:
        type: integer
        format: int32
  LeagueEntry:
    type: object
    readOnly: true
    properties:
      queueType:
        type: string
        readOnly: true
      summonerName:
        type: string
        readOnly: true
      hotStreak:
        type: boolean
        readOnly: true
      miniSeries:
        '$ref': '#/definitions/MiniSeries'
      wins:
        type: integer
        format: int32
        readOnly: true
        description: 'Winning team on Summoners Rift. First placement in Teamfight Tactics.'
      veteran:
        type: boolean
        readOnly: true
      losses:
        type: integer
        format: int32
        description: 'Losing team on Summoners Rift. Second through eighth placement in Teamfight Tactics.'
        readOnly: true
      rank:
        type: string
        readOnly: true
      leagueId:
        type: string
        readOnly: true
      inactive:
        type: boolean
        readOnly: true
      freshBlood:
        type: boolean
        readOnly: true
      tier:
        type: string
        readOnly: true
      summonerId:
        type: string
        readOnly: true
        description: 'Summoner ID (Encrypted)'
      leaguePoints:
        type: integer
        format: int32
        readOnly: true
  MiniSeries:
    type: object
    readOnly: true
    properties:
      progress:
        type: string
        readOnly: true
      losses:
        type: integer
        format: int32
        readOnly: true
      target:
        type: integer
        format: int32
        readOnly: true
      wins:
        type: integer
        format: int32
        readOnly: true
parameters:
  encryptedSummonerId:
    name: encryptedSummonerId
    in: path
    type: string
    description: 'Summoner ID associated with the player'
    required: true
  championId:
    name: championId
    in: path
    type: integer
    format: int64
    description: 'Champion ID'
    required: true
  queue:
    name: queue
    in: path
    type: string
    description: 'Note that the queue value must be a valid ranked queue.'
    required: true
    enum:
    - RANKED_SOLO_5x5
    - RANKED_TFT
    - RANKED_FLEX_SR
    - RANKED_FLEX_TT
  tierExp:
    name: tier
    in: path
    type: string
    required: true
    enum:
    - CHALLENGER
    - GRANDMASTER
    - MASTER
    - DIAMOND
    - PLATINUM
    - GOLD
    - SILVER
    - BRONZE
    - IRON
  division:
    name: division
    in: path
    type: string
    required: true
    enum:
    - I
    - II
    - III
    - IV
  page:
    name: page
    in: query
    type: integer
    format: int32
    required: false
responses:
  BadRequest:
    description: 'Bad request'
    schema:
      '$ref': '#/definitions/APIError'
  Unauthorized:
    description: 'Unauthorized'
    schema:
      '$ref': '#/definitions/APIError'
  Forbidden:
    description: 'Forbidden'
    schema:
      '$ref': '#/definitions/APIError'
  NotFound:
    description: 'Not found'
    schema:
      '$ref': '#/definitions/APIError'
  MethodNotAllowed:
    description: 'Method not allowed'
    schema:
      '$ref': '#/definitions/APIError'
  UnsopportedMediaType:
    description: 'Unsopported media type'
    schema:
      '$ref': '#/definitions/APIError'
  RateLimitExceeded:
    description: 'Rate limit Exceeded'
    schema:
      '$ref': '#/definitions/APIError'
  IntenalServerError:
    description: 'Internal server error'
    schema:
      '$ref': '#/definitions/APIError'
  BadGateway:
    description: 'Bad gateway'
    schema:
      '$ref': '#/definitions/APIError'
  ServiceUnavailable:
    description: 'Service Unavailable'
    schema:
      '$ref': '#/definitions/APIError'
  GatewayTimeout:
    description: 'Gateway timeout'
    schema:
      '$ref': '#/definitions/APIError'
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: X-Riot-Token
  APIKeyQueryParam:
    type: apiKey
    in: query
    name: api_key
security:
- APIKeyHeader: []
- APIKeyQueryParam: []
tags:
- name: championMastery
  x-go-name:
  externalDocs:
    url: 'https://developer.riotgames.com/apis#champion-mastery-v4'
- name: champion
  externalDocs:
    url: 'https://developer.riotgames.com/apis#champion-v3'
- name: league
  externalDocs:
    url: 'https://developer.riotgames.com/apis#league-v4'
externalDocs:
  url: 'https://developer.riotgames.com/apis'
