// Code generated by go-swagger; DO NOT EDIT.

package champion_mastery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/andresperezl/gol/lolapi/models"
)

// GetChampionMasteryReader is a Reader for the GetChampionMastery structure.
type GetChampionMasteryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChampionMasteryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChampionMasteryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetChampionMasteryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetChampionMasteryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetChampionMasteryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChampionMasteryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetChampionMasteryMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetChampionMasteryUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetChampionMasteryTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetChampionMasteryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewGetChampionMasteryBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetChampionMasteryServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewGetChampionMasteryGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetChampionMasteryOK creates a GetChampionMasteryOK with default headers values
func NewGetChampionMasteryOK() *GetChampionMasteryOK {
	return &GetChampionMasteryOK{}
}

/*GetChampionMasteryOK handles this case with default header values.

OK
*/
type GetChampionMasteryOK struct {
	Payload *models.ChampionMastery
}

func (o *GetChampionMasteryOK) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryOK  %+v", 200, o.Payload)
}

func (o *GetChampionMasteryOK) GetPayload() *models.ChampionMastery {
	return o.Payload
}

func (o *GetChampionMasteryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChampionMastery)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryBadRequest creates a GetChampionMasteryBadRequest with default headers values
func NewGetChampionMasteryBadRequest() *GetChampionMasteryBadRequest {
	return &GetChampionMasteryBadRequest{}
}

/*GetChampionMasteryBadRequest handles this case with default header values.

Bad request
*/
type GetChampionMasteryBadRequest struct {
	Payload *models.Error
}

func (o *GetChampionMasteryBadRequest) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryBadRequest  %+v", 400, o.Payload)
}

func (o *GetChampionMasteryBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryUnauthorized creates a GetChampionMasteryUnauthorized with default headers values
func NewGetChampionMasteryUnauthorized() *GetChampionMasteryUnauthorized {
	return &GetChampionMasteryUnauthorized{}
}

/*GetChampionMasteryUnauthorized handles this case with default header values.

Unauthorized
*/
type GetChampionMasteryUnauthorized struct {
	Payload *models.Error
}

func (o *GetChampionMasteryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryUnauthorized  %+v", 401, o.Payload)
}

func (o *GetChampionMasteryUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryForbidden creates a GetChampionMasteryForbidden with default headers values
func NewGetChampionMasteryForbidden() *GetChampionMasteryForbidden {
	return &GetChampionMasteryForbidden{}
}

/*GetChampionMasteryForbidden handles this case with default header values.

Forbidden
*/
type GetChampionMasteryForbidden struct {
	Payload *models.Error
}

func (o *GetChampionMasteryForbidden) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryForbidden  %+v", 403, o.Payload)
}

func (o *GetChampionMasteryForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryNotFound creates a GetChampionMasteryNotFound with default headers values
func NewGetChampionMasteryNotFound() *GetChampionMasteryNotFound {
	return &GetChampionMasteryNotFound{}
}

/*GetChampionMasteryNotFound handles this case with default header values.

Not found
*/
type GetChampionMasteryNotFound struct {
	Payload *models.Error
}

func (o *GetChampionMasteryNotFound) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryNotFound  %+v", 404, o.Payload)
}

func (o *GetChampionMasteryNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryMethodNotAllowed creates a GetChampionMasteryMethodNotAllowed with default headers values
func NewGetChampionMasteryMethodNotAllowed() *GetChampionMasteryMethodNotAllowed {
	return &GetChampionMasteryMethodNotAllowed{}
}

/*GetChampionMasteryMethodNotAllowed handles this case with default header values.

Method not allowed
*/
type GetChampionMasteryMethodNotAllowed struct {
	Payload *models.Error
}

func (o *GetChampionMasteryMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetChampionMasteryMethodNotAllowed) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryUnsupportedMediaType creates a GetChampionMasteryUnsupportedMediaType with default headers values
func NewGetChampionMasteryUnsupportedMediaType() *GetChampionMasteryUnsupportedMediaType {
	return &GetChampionMasteryUnsupportedMediaType{}
}

/*GetChampionMasteryUnsupportedMediaType handles this case with default header values.

Unsopported media type
*/
type GetChampionMasteryUnsupportedMediaType struct {
	Payload *models.Error
}

func (o *GetChampionMasteryUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetChampionMasteryUnsupportedMediaType) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryTooManyRequests creates a GetChampionMasteryTooManyRequests with default headers values
func NewGetChampionMasteryTooManyRequests() *GetChampionMasteryTooManyRequests {
	return &GetChampionMasteryTooManyRequests{}
}

/*GetChampionMasteryTooManyRequests handles this case with default header values.

Rate limit Exceeded
*/
type GetChampionMasteryTooManyRequests struct {
	Payload *models.Error
}

func (o *GetChampionMasteryTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetChampionMasteryTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryInternalServerError creates a GetChampionMasteryInternalServerError with default headers values
func NewGetChampionMasteryInternalServerError() *GetChampionMasteryInternalServerError {
	return &GetChampionMasteryInternalServerError{}
}

/*GetChampionMasteryInternalServerError handles this case with default header values.

Internal server error
*/
type GetChampionMasteryInternalServerError struct {
	Payload *models.Error
}

func (o *GetChampionMasteryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryInternalServerError  %+v", 500, o.Payload)
}

func (o *GetChampionMasteryInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryBadGateway creates a GetChampionMasteryBadGateway with default headers values
func NewGetChampionMasteryBadGateway() *GetChampionMasteryBadGateway {
	return &GetChampionMasteryBadGateway{}
}

/*GetChampionMasteryBadGateway handles this case with default header values.

Bad gateway
*/
type GetChampionMasteryBadGateway struct {
	Payload *models.Error
}

func (o *GetChampionMasteryBadGateway) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryBadGateway  %+v", 502, o.Payload)
}

func (o *GetChampionMasteryBadGateway) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryServiceUnavailable creates a GetChampionMasteryServiceUnavailable with default headers values
func NewGetChampionMasteryServiceUnavailable() *GetChampionMasteryServiceUnavailable {
	return &GetChampionMasteryServiceUnavailable{}
}

/*GetChampionMasteryServiceUnavailable handles this case with default header values.

Service Unavailable
*/
type GetChampionMasteryServiceUnavailable struct {
	Payload *models.Error
}

func (o *GetChampionMasteryServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetChampionMasteryServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChampionMasteryGatewayTimeout creates a GetChampionMasteryGatewayTimeout with default headers values
func NewGetChampionMasteryGatewayTimeout() *GetChampionMasteryGatewayTimeout {
	return &GetChampionMasteryGatewayTimeout{}
}

/*GetChampionMasteryGatewayTimeout handles this case with default header values.

Gateway timeout
*/
type GetChampionMasteryGatewayTimeout struct {
	Payload *models.Error
}

func (o *GetChampionMasteryGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /champion-mastery/v4/champion-masteries/by-summoner/{encryptedSummonerId}/by-champion/{championId}][%d] getChampionMasteryGatewayTimeout  %+v", 504, o.Payload)
}

func (o *GetChampionMasteryGatewayTimeout) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetChampionMasteryGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
